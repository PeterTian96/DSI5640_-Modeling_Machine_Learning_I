## make predictions from linear model with tau=0.75 loss
lin_pred_tau75 <- predict_lin(x=x_grid, beta=lin_beta_tau75$par)
## plot data
plot_psa_data()
## plot predictions from L1 loss
lines(x=x_grid, y=lin_pred_L1, col='darkgreen', lwd=2)
prostate <-
read.table(url(
'https://web.stanford.edu/~hastie/ElemStatLearn/datasets/prostate.data'))
prostate_train <- subset(prostate, train==TRUE)
plot_psa_data <- function(dat=prostate_train) {
plot(dat$lpsa, dat$lcavol,
xlab="log Prostate Screening Antigen (psa)",
ylab="log Cancer Volume (lcavol)",
pch = 20)
}
plot_psa_data()
L1_loss <- function(y, yhat)
{(y-yhat)^2+(y-yhat)}
L2_loss <- function(y, yhat)
(y-yhat)^2
tilted_loss <- function(y, yhat, tau){
ifelse((y-yhat)>0, (tau * (y-yhat)), ((tau -1)* (y-yhat)))
}
err_grd <- seq(-1,1,length.out=200)
plot(err_grd, L1_loss(err_grd,0), type='l',col = 'darkgreen',
xlab='y-yhat', ylab='loss')
lines(err_grd, L2_loss(err_grd,0),col = 'orange', lty=2,lwd = 2)
lines(err_grd, tilted_loss(err_grd,0,0.25),col = 'blue', lty=2,lwd = 2)
lines(err_grd, tilted_loss(err_grd,0,0.75),col = 'pink', lty=2,lwd = 2)
legend("topleft", c("L1 loss", "L2 loss","tau = 0.25", "tau = 0.75"), lwd = c(2,2,2),col = c("darkgreen", "orange","blue", "pink"))
fit_lin <- function(y, x, loss=L2_loss, beta_init = c(-0.51, 0.75)) {
err <- function(beta)
mean(loss(y,  beta[1] + beta[2]*x))
beta <- optim(par = beta_init, fn = err)
return(beta)
}
predict_lin <- function(x, beta)
beta[1] + beta[2]*x
fit_l1_lin <- function(y, x, loss=L1_loss, beta_init = c(-0.51, 0.75)) {
err <- function(beta)
mean(loss(y,  beta[1] + beta[2]*x,tau))
beta <- optim(par = beta_init, fn = err)
return(beta)
}
lin_l1_beta <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
x_grid <- seq(min(prostate_train$lpsa),
max(prostate_train$lpsa),
length.out=100)
lin_pred_l1 <- predict_lin(x=x_grid, beta=lin_l1_beta$par)
fit_l2_lin <- function(y, x, loss=L2_loss, beta_init = c(-0.51, 0.75)) {
err <- function(beta)
mean(loss(y,  beta[1] + beta[2]*x,tau))
beta <- optim(par = beta_init, fn = err)
return(beta)
}
lin_l2_beta <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
x_grid <- seq(min(prostate_train$lpsa),
max(prostate_train$lpsa),
length.out=100)
lin_pred_l2 <- predict_lin(x=x_grid, beta=lin_l2_beta$par)
fit_tilt_lin <- function(y, x, tau = c(0.25,0.75),loss=L1_loss,beta_init = c(-0.51, 0.75)) {
err <- function(beta)
mean(loss(y,  beta[1] + beta[2]*x,tau))
beta <- optim(par = beta_init, fn = err)
return(beta)
}
lin_beta_tau25 <- fit_tilt_lin(y = prostate_train$lcavol,
x = prostate_train$lpsa,
tau = 0.25,
loss = tilted_loss)
lin_beta_tau75 <- fit_tilt_lin(y = prostate_train$lcavol,
x = prostate_train$lpsa,
tau = 0.75,
loss = tilted_loss)
lin_pred_tau25 <- predict_lin(x = x_grid, beta = lin_beta_tau25$par)
lin_pred_tau75 <- predict_lin(x = x_grid, beta = lin_beta_tau75$par)
plot_psa_data()
lines(x = x_grid, y = lin_pred_l1 , col = 'darkgreen', lwd = 2)
lines(x = x_grid, y = lin_pred_l2 , col = 'orange', lty=2,lwd = 2)
lines(x = x_grid, y = lin_pred_tau25, col = 'blue', lty=2,lwd = 2)
lines(x = x_grid, y = lin_pred_tau75, col = 'pink',lty=2, lwd = 2)
legend("topleft", c("L1 loss", "L2 loss","tau = 0.25", "tau = 0.75"), lwd = c(2,2,2),col = c("darkgreen","orange", "blue", "pink"))
fit_l1_nolin <- function(y, x, loss=L2_loss, beta_init = c(-1.0, 0.0, -0.3)) {
err <- function(beta)
mean(loss(y,  beta[1] + beta[2]*exp(-beta[3]*x)))
beta <- optim(par = beta_init, fn = err)
return(beta)
}
fit_tilt_nolin <- function(y, x, loss=L2_loss, beta_init = c(-1.0, 0.0, -0.3), tau = c(0.25,0.75)) {
err <- function(beta)
mean(loss(y,  beta[1] + beta[2]*exp(-beta[3]*x), tau))
beta <- optim(par = beta_init, fn = err)
return(beta)
}
predict_nolin <- function(x, beta)
beta[1] + beta[2]*exp(-beta[3]*x)
nolin_beta_l1 <- fit_l1_nolin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
x_grid <- seq(min(prostate_train$lpsa),
max(prostate_train$lpsa),
length.out=100)
nolin_pred_l1 <- predict_nolin(x=x_grid, beta=nolin_beta_l1$par)
nolin_beta_l2 <- fit_l1_nolin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
x_grid <- seq(min(prostate_train$lpsa),
max(prostate_train$lpsa),
length.out=100)
nolin_pred_l2 <- predict_nolin(x=x_grid, beta=nolin_beta_l2$par)
nonlin_beta_tau25 <- fit_tilt_nolin(y = prostate_train$lcavol,
x = prostate_train$lpsa,
tau = 0.25,
loss = tilted_loss)
nonlin_pred_tau25 <- predict_nolin(x = x_grid, beta = nonlin_beta_tau25$par)
nonlin_beta_tau75 <- fit_tilt_nolin(y = prostate_train$lcavol,
x = prostate_train$lpsa,
tau = 0.75,
loss = tilted_loss)
nonlin_pred_tau75 <- predict_nolin(x = x_grid, beta = nonlin_beta_tau75$par)
plot_psa_data()
lines(x = x_grid, y = nolin_pred_l1, col = 'darkgreen', lwd = 2)
lines(x = x_grid, y = nolin_pred_l2, col = 'orange', lty=2,lwd = 2)
lines(x = x_grid, y = nonlin_pred_tau25, col = 'blue', lty=2,lwd = 2)
lines(x = x_grid, y = nonlin_pred_tau75, col = 'pink', lty=2,lwd = 2)
legend("topleft", c("L1 loss","L2 loss", " tau = 0.25", " tau = 0.75"), lwd = c(2,2,2),col = c("darkgreen","orange", "blue", "pink"))
require(tidyverse)
## fit linear model with L1 loss
lin_beta_L1 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
## make predictions from linear model with L1 loss
lin_pred_L1 <- predict_lin(x=x_grid, beta=lin_beta_L1$par)
## fit linear model with L2 loss
lin_beta_L2 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
## make predictions from linear model with L2 loss
lin_pred_L2 <- predict_lin(x=x_grid, beta=lin_beta_L2$par)
## fit linear model with tau=0.25 loss
lin_beta_tau25 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.25))
## make predictions from linear model with tau=0.25 loss
lin_pred_tau25 <- predict_lin(x=x_grid, beta=lin_beta_tau25$par)
## fit linear model with tau=0.75 loss
lin_beta_tau75 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.75))
## make predictions from linear model with tau=0.75 loss
lin_pred_tau75 <- predict_lin(x=x_grid, beta=lin_beta_tau75$par)
## plot data
plot_psa_data()
## plot predictions from L1 loss
lines(x=x_grid, y=lin_pred_L1, col='darkgreen', lwd=2)
## plot predictions from L2 loss
lines(x = x_grid, y = lin_pred_l2 , col = 'orange', lty=2,lwd = 2)
## plot predictions from linear model with tau=0.25 loss
lines(x = x_grid, y = lin_pred_tau25, col = 'blue', lty=2,lwd = 2)
## plot predictions from linear model with tau=0.75 loss
lines(x = x_grid, y = lin_pred_tau75, col = 'pink',lty=2, lwd = 2)
legend("topleft", c("L1 loss", "L2 loss","tau = 0.25", "tau = 0.75"), lwd = c(2,2,2),col = c("darkgreen","orange", "blue", "pink"))
require(tidyverse)
## fit linear model with L1 loss
lin_beta_L1 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
## make predictions from linear model with L1 loss
lin_pred_L1 <- predict_lin(x=x_grid, beta=lin_beta_L1$par)
## fit linear model with L2 loss
lin_beta_L2 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
## make predictions from linear model with L2 loss
lin_pred_L2 <- predict_lin(x=x_grid, beta=lin_beta_L2$par)
## fit linear model with tau=0.25 loss
lin_beta_tau25 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.25))
## make predictions from linear model with tau=0.25 loss
lin_pred_tau25 <- predict_lin(x=x_grid, beta=lin_beta_tau25$par)
## fit linear model with tau=0.75 loss
lin_beta_tau75 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.75))
## make predictions from linear model with tau=0.75 loss
lin_pred_tau75 <- predict_lin(x=x_grid, beta=lin_beta_tau75$par)
## plot data
plot_psa_data()
## plot predictions from L1 loss
lines(x=x_grid, y=lin_pred_L1, col='darkgreen', lwd=2)
## plot predictions from L2 loss
lines(x = x_grid, y = lin_pred_l2 , col = 'orange', lty=2,lwd = 2)
## plot predictions from linear model with tau=0.25 loss
lines(x = x_grid, y = lin_pred_tau25, col = 'blue', lty=2,lwd = 2)
## plot predictions from linear model with tau=0.75 loss
lines(x = x_grid, y = lin_pred_tau75, col = 'pink',lty=2, lwd = 2)
legend("bottomright", c("L1 loss", "L2 loss","tau = 0.25", "tau = 0.75"), lwd = c(2,2,2),col = c("darkgreen","orange", "blue", "pink"))
require(tidyverse)
## fit linear model with L1 loss
lin_beta_L1 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
## make predictions from linear model with L1 loss
lin_pred_L1 <- predict_lin(x=x_grid, beta=lin_beta_L1$par)
## fit linear model with L2 loss
lin_beta_L2 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
## make predictions from linear model with L2 loss
lin_pred_L2 <- predict_lin(x=x_grid, beta=lin_beta_L2$par)
## fit linear model with tau=0.25 loss
lin_beta_tau25 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.25))
## make predictions from linear model with tau=0.25 loss
lin_pred_tau25 <- predict_lin(x=x_grid, beta=lin_beta_tau25$par)
## fit linear model with tau=0.75 loss
lin_beta_tau75 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.75))
## make predictions from linear model with tau=0.75 loss
lin_pred_tau75 <- predict_lin(x=x_grid, beta=lin_beta_tau75$par)
## plot data
plot_psa_data()
## plot predictions from L1 loss
lines(x=x_grid, y=lin_pred_L1, col='darkgreen', lwd=2)
## plot predictions from L2 loss
lines(x = x_grid, y = lin_pred_l2 , col = 'pink', lty=2,lwd = 2)
## plot predictions from linear model with tau=0.25 loss
lines(x = x_grid, y = lin_pred_tau25, col = 'red', lty=2,lwd = 2)
## plot predictions from linear model with tau=0.75 loss
lines(x = x_grid, y = lin_pred_tau75, col = 'blue',lty=2, lwd = 2)
legend("bottomright", title="Error Type",c("L1 loss", "L2 loss","tau = 0.25", "tau = 0.75"), lwd = c(2,2,2),col = c("darkgreen","pink", "red", "blue"))
require(tidyverse)
## fit linear model with L1 loss
lin_beta_L1 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
## make predictions from linear model with L1 loss
lin_pred_L1 <- predict_lin(x=x_grid, beta=lin_beta_L1$par)
## fit linear model with L2 loss
lin_beta_L2 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
## make predictions from linear model with L2 loss
lin_pred_L2 <- predict_lin(x=x_grid, beta=lin_beta_L2$par)
## fit linear model with tau=0.25 loss
lin_beta_tau25 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.25))
## make predictions from linear model with tau=0.25 loss
lin_pred_tau25 <- predict_lin(x=x_grid, beta=lin_beta_tau25$par)
## fit linear model with tau=0.75 loss
lin_beta_tau75 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.75))
## make predictions from linear model with tau=0.75 loss
lin_pred_tau75 <- predict_lin(x=x_grid, beta=lin_beta_tau75$par)
## plot data
plot_psa_data()
## plot predictions from L1 loss
lines(x=x_grid, y=lin_pred_L1, col='darkgreen', lty=1,lwd=2)
## plot predictions from L2 loss
lines(x = x_grid, y = lin_pred_l2 , col = 'pink', lty=2,lwd = 2)
## plot predictions from linear model with tau=0.25 loss
lines(x = x_grid, y = lin_pred_tau25, col = 'red', lty=3,lwd = 2)
## plot predictions from linear model with tau=0.75 loss
lines(x = x_grid, y = lin_pred_tau75, col = 'blue',lty=4, lwd = 2)
legend("bottomright", title="Error Type",c("L1 loss", "L2 loss","tau = 0.25", "tau = 0.75"), lwd = c(2,2,2),col = c("darkgreen","pink", "red", "blue"))
## fit linear model with L1 loss
lin_beta_L1 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
## make predictions from linear model with L1 loss
lin_pred_L1 <- predict_lin(x=x_grid, beta=lin_beta_L1$par)
## fit linear model with L2 loss
lin_beta_L2 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
## make predictions from linear model with L2 loss
lin_pred_L2 <- predict_lin(x=x_grid, beta=lin_beta_L2$par)
## fit linear model with tau=0.25 loss
require(tidyverse)
lin_beta_tau25 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.25))
## make predictions from linear model with tau=0.25 loss
lin_pred_tau25 <- predict_lin(x=x_grid, beta=lin_beta_tau25$par)
## fit linear model with tau=0.75 loss
require(tidyverse)
lin_beta_tau75 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.75))
## make predictions from linear model with tau=0.75 loss
lin_pred_tau75 <- predict_lin(x=x_grid, beta=lin_beta_tau75$par)
## plot data
plot_psa_data()
## plot predictions from L1 loss
lines(x=x_grid, y=lin_pred_L1, col='darkgreen', lty=1,lwd=2)
## plot predictions from L2 loss
lines(x = x_grid, y = lin_pred_l2 , col = 'pink', lty=2,lwd = 2)
## plot predictions from linear model with tau=0.25 loss
lines(x = x_grid, y = lin_pred_tau25, col = 'red', lty=3,lwd = 2)
## plot predictions from linear model with tau=0.75 loss
lines(x = x_grid, y = lin_pred_tau75, col = 'blue',lty=4, lwd = 2)
legend("bottomright", title="Error Type",c("L1 loss", "L2 loss","tau = 0.25", "tau = 0.75"), lwd = c(2,2,2),col = c("darkgreen","pink", "red", "blue"))
## fit linear model with L1 loss
lin_beta_L1 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
## make predictions from linear model with L1 loss
lin_pred_L1 <- predict_lin(x=x_grid, beta=lin_beta_L1$par)
## fit linear model with L2 loss
lin_beta_L2 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
## make predictions from linear model with L2 loss
lin_pred_L2 <- predict_lin(x=x_grid, beta=lin_beta_L2$par)
## fit linear model with tau=0.25 loss
require(tidyverse)
lin_beta_tau25 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.25))
## make predictions from linear model with tau=0.25 loss
lin_pred_tau25 <- predict_lin(x=x_grid, beta=lin_beta_tau25$par)
## fit linear model with tau=0.75 loss
require(tidyverse)
lin_beta_tau75 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.75))
## make predictions from linear model with tau=0.75 loss
lin_pred_tau75 <- predict_lin(x=x_grid, beta=lin_beta_tau75$par)
## plot data
plot_psa_data()
## plot predictions from L1 loss
lines(x=x_grid, y=lin_pred_L1, col='darkgreen', lty=1,lwd=2)
## plot predictions from L2 loss
lines(x = x_grid, y = lin_pred_l2 , col = 'pink', lty=2,lwd = 2)
## plot predictions from linear model with tau=0.25 loss
lines(x = x_grid, y = lin_pred_tau25, col = 'red', lty=3,lwd = 2)
## plot predictions from linear model with tau=0.75 loss
lines(x = x_grid, y = lin_pred_tau75, col = 'blue',lty=4, lwd = 2)
legend("bottomright", title="Error Type",c("L1 loss", "L2 loss","tau = 0.25", "tau = 0.75"), lwd = c(1,2,3,4),col = c("darkgreen","pink", "red", "blue"))
## fit linear model with L1 loss
lin_beta_L1 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
## make predictions from linear model with L1 loss
lin_pred_L1 <- predict_lin(x=x_grid, beta=lin_beta_L1$par)
## fit linear model with L2 loss
lin_beta_L2 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
## make predictions from linear model with L2 loss
lin_pred_L2 <- predict_lin(x=x_grid, beta=lin_beta_L2$par)
## fit linear model with tau=0.25 loss
require(tidyverse)
lin_beta_tau25 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.25))
## make predictions from linear model with tau=0.25 loss
lin_pred_tau25 <- predict_lin(x=x_grid, beta=lin_beta_tau25$par)
## fit linear model with tau=0.75 loss
require(tidyverse)
lin_beta_tau75 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.75))
## make predictions from linear model with tau=0.75 loss
lin_pred_tau75 <- predict_lin(x=x_grid, beta=lin_beta_tau75$par)
## plot data
plot_psa_data()
## plot predictions from L1 loss
lines(x=x_grid, y=lin_pred_L1, col='darkgreen', lty=1,lwd=2)
## plot predictions from L2 loss
lines(x = x_grid, y = lin_pred_l2 , col = 'pink', lty=2,lwd = 2)
## plot predictions from linear model with tau=0.25 loss
lines(x = x_grid, y = lin_pred_tau25, col = 'red', lty=3,lwd = 2)
## plot predictions from linear model with tau=0.75 loss
lines(x = x_grid, y = lin_pred_tau75, col = 'blue',lty=4, lwd = 2)
legend("bottomright", title="Error Type",c("L1 loss", "L2 loss","tau = 0.25", "tau = 0.75"), lty = c(1,2,3,4),col = c("darkgreen","pink", "red", "blue"))
## make predictions from nonlinear model
fit_nonlinear <- function(y, x, loss=L2_loss, beta_init = c(-1.0, 0.0, -0.3)) {
err <- function(beta)
mean(loss(y,  beta[1] + beta[2]*exp(-beta[3]*x)))
beta <- optim(par = beta_init, fn = err)
return(beta)
}
## make predictions from nonlinear model
predict_nonlinear <- function(x, beta)
beta[1] + beta[2]*exp(-beta[3]*x)
## fit linear model with L1 loss
lin_beta_L1 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
## make predictions from linear model with L1 loss
lin_pred_L1 <- predict_lin(x=x_grid, beta=lin_beta_L1$par)
## fit linear model with L2 loss
lin_beta_L2 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
## make predictions from linear model with L2 loss
lin_pred_L2 <- predict_lin(x=x_grid, beta=lin_beta_L2$par)
## fit linear model with tau=0.25 loss
require(tidyverse)
lin_beta_tau25 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.25))
## make predictions from linear model with tau=0.25 loss
lin_pred_tau25 <- predict_lin(x=x_grid, beta=lin_beta_tau25$par)
## fit linear model with tau=0.75 loss
require(tidyverse)
lin_beta_tau75 <- fit_lin(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.75))
## make predictions from linear model with tau=0.75 loss
lin_pred_tau75 <- predict_lin(x=x_grid, beta=lin_beta_tau75$par)
## plot data
plot_psa_data()
## plot predictions from L1 loss
lines(x=x_grid, y=lin_pred_L1, col='darkgreen', lty=1)
## plot predictions from L2 loss
lines(x = x_grid, y = lin_pred_l2 , col = 'pink', lty=2)
## plot predictions from linear model with tau=0.25 loss
lines(x = x_grid, y = lin_pred_tau25, col = 'red', lty=3)
## plot predictions from linear model with tau=0.75 loss
lines(x = x_grid, y = lin_pred_tau75, col = 'blue',lty=4)
legend("bottomright", title="Error Type",c("L1 loss", "L2 loss","tau = 0.25", "tau = 0.75"), lty = c(1,2,3,4),col = c("darkgreen","pink", "red", "blue"))
## make predictions from nonlinear model
fit_nonlinear <- function(y, x, loss=L2_loss, beta_init = c(-1.0, 0.0, -0.3)) {
err <- function(beta)
mean(loss(y,  beta[1] + beta[2]*exp(-beta[3]*x)))
beta <- optim(par = beta_init, fn = err)
return(beta)
}
## make predictions from nonlinear model
predict_nonlinear <- function(x, beta)
beta[1] + beta[2]*exp(-beta[3]*x)
## fit nonlinear model with L1 loss
nonlinear_beta_L1 <- fit_nonlinear(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
## make predictions from nonlinear model with L1 loss
nonlinear_pred_L1 <- predict_nonlinear(x=x_grid, beta=nonlinear_beta_L1$par)
## fit nonlinear model with L2 loss
nonlinear_beta_L2 <- fit_nonlinear(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
## make predictions from nonlinear model with L2 loss
nonlinear_pred_L2 <- predict_nonlinear(x=x_grid, beta=nonlinear_beta_L2$par)
## fit nonlinear model with tau=0.25 loss
require(tidyverse)
nonlinear_beta_tau25 <- fit_nonlinear(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.25))
## make predictions from nonlinear model with tau=0.25 loss
nonlinear_pred_tau25 <- predict_nonlinear(x=x_grid, beta=nonlinear_beta_tau25$par)
## fit nonlinear model with tau=0.75 loss
require(tidyverse)
nonlinear_beta_tau75 <- fit_nonlinear(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.75))
## make predictions from nonlinear model with tau=0.75 loss
nonlinear_pred_tau75 <- predict_nonlinear(x=x_grid, beta=nonlinear_beta_tau75$par)
## plot data
plot_psa_data()
## plot predictions from L1 loss
lines(x=x_grid, y=nonlinear_pred_L1, col='darkgreen', lty=1)
## plot predictions from L2 loss
lines(x = x_grid, y = lnonlinear_pred_l2 , col = 'pink', lty=2)
## fit nonlinear model with L1 loss
nonlinear_beta_L1 <- fit_nonlinear(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L1_loss)
## make predictions from nonlinear model with L1 loss
nonlinear_pred_L1 <- predict_nonlinear(x=x_grid, beta=nonlinear_beta_L1$par)
## fit nonlinear model with L2 loss
nonlinear_beta_L2 <- fit_nonlinear(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=L2_loss)
## make predictions from nonlinear model with L2 loss
nonlinear_pred_L2 <- predict_nonlinear(x=x_grid, beta=nonlinear_beta_L2$par)
## fit nonlinear model with tau=0.25 loss
require(tidyverse)
nonlinear_beta_tau25 <- fit_nonlinear(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.25))
## make predictions from nonlinear model with tau=0.25 loss
nonlinear_pred_tau25 <- predict_nonlinear(x=x_grid, beta=nonlinear_beta_tau25$par)
## fit nonlinear model with tau=0.75 loss
require(tidyverse)
nonlinear_beta_tau75 <- fit_nonlinear(y=prostate_train$lcavol,
x=prostate_train$lpsa,
loss=partial(tilted.abs,tau=0.75))
## make predictions from nonlinear model with tau=0.75 loss
nonlinear_pred_tau75 <- predict_nonlinear(x=x_grid, beta=nonlinear_beta_tau75$par)
## plot data
plot_psa_data()
## plot predictions from L1 loss
lines(x=x_grid, y=nonlinear_pred_L1, col='darkgreen', lty=1)
## plot predictions from L2 loss
lines(x = x_grid, y = nonlinear_pred_L2 , col = 'pink', lty=2)
## plot predictions from linear model with tau=0.25 loss
lines(x = x_grid, y = nonlinear_pred_tau25, col = 'red', lty=3)
## plot predictions from linear model with tau=0.75 loss
lines(x = x_grid, y = nonlinear_pred_tau75, col = 'blue',lty=4)
legend("bottomright", title="Error Type",c("L1 loss", "L2 loss","tau = 0.25", "tau = 0.75"), lty = c(1,2,3,4),col = c("darkgreen","pink", "red", "blue"))
